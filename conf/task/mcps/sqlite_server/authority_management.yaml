_target_: runners.mcp_runner.MCPClientRunner
args:
  server_params:
    _target_: mcp.StdioServerParameters
    command: python3
    args:
      - ../mcps/sqlite_server/main.py
      - --db-path 
      - ../.db/context.sqlite3
      - --cfg-name 
      - tools_config.json

  tool_calls:  
    # 1. 列出表（初始状态）
    - name: list_tables
      args: {}

    # 2. 创建权限管理表
    - name: create_table
      args:
        table_name: authority_management  # 权限管理表名
        table_comment: 系统用户权限管理表
        columns: |
            user_id TEXT PRIMARY KEY NOT NULL,
            user_name TEXT NOT NULL,
            role_name TEXT NOT NULL,
            permissions TEXT NOT NULL,
            expiry_date DATETIME,
            remark TEXT

    # 3. 描述表结构
    - name: describe_table
      args:
        table_name: authority_management

    # 4. 插入权限记录（3条不同权限的用户）
    - name: write_query
      args:
        query: |
          INSERT INTO authority_management 
          (user_id, user_name, role_name, permissions, remark)
          VALUES ('001', 'pujc', 'admin', '["ALL_ACCESS", "USER_MANAGE", "SYSTEM_CONFIG"]', '超级管理员权限')

    - name: write_query
      args:
        query: |
          INSERT INTO authority_management 
          (user_id, user_name, role_name, permissions, expiry_date, remark)
          VALUES ('002', 'mochou', 'user', '["ALL_ACCESS", "USER_MANAGE"]', '2025-12-31', '普通用户,仅可读权限（有效期至年底）')

    - name: write_query
      args:
        query: |
          INSERT INTO authority_management 
          (user_id, user_name, role_name, permissions, remark)
          VALUES ('003', 'baichao', 'user', '["DATA_VIEW", "AUDIT_OPERATION"]', '审核权限')

    - name: write_query
      args:
        query: |
          INSERT INTO authority_management 
          (user_id, user_name, role_name, permissions, expiry_date, remark)
          VALUES ('004', '004', 'user', '["ALL_ACCESS", "USER_MANAGE"]', '2024-12-31', '普通用户')

    # 5. 查询永久有效的权限
    - name: read_query
      args:
        query: "SELECT * FROM authority_management WHERE expiry_date IS NULL"

    # 6. 查询即将过期的权限
    - name: read_query
      args:
        query: "SELECT * FROM authority_management WHERE expiry_date < DATE('now') AND expiry_date IS NOT NULL"
    
    # 9. 删除过期的权限记录（演示用，实际应通过状态控制）
    - name: write_query
      args:
        query: "DELETE FROM authority_management WHERE expiry_date < DATE('now')"

    # 10. 查询剩余权限记录
    - name: read_query
      args:
        query: "SELECT * FROM authority_management"

    # 11. 删除表（危险操作）
    #- name: drop_table
    #  args:
    #    table_name: authority_management

    # 12. 验证表已删除
    - name: list_tables
      args: {}
